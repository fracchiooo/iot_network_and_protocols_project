[1/10] Performing build step for 'bootloader'
[1/1] cd /home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/build/bootloader/esp-idf/esptool_py && /home/fracchio/.espressif/python_env/idf5.2_py3.11_env/bin/python /home/fracchio/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/build/bootloader/bootloader.bin
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/crypto_wrapper/CMakeFiles/__idf_crypto_wrapper.dir/crypto_wrapper.c.obj
/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/crypto_wrapper/crypto_wrapper.c: In function 'print_rsa_key':
/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/crypto_wrapper/crypto_wrapper.c:50:47: warning: passing argument 1 of 'mbedtls_pk_write_pubkey_pem' from incompatible pointer type [-Wincompatible-pointer-types]
   50 |     if(k==1) ret= mbedtls_pk_write_pubkey_pem(&pk, buffer, 16000-1);
      |                                               ^~~
      |                                               |
      |                                               mbedtls_rsa_context *
In file included from /home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/crypto_wrapper/crypto_wrapper.h:8,
                 from /home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/crypto_wrapper/crypto_wrapper.c:1:
/home/fracchio/esp/esp-idf/components/mbedtls/mbedtls/include/mbedtls/pk.h:1001:59: note: expected 'const mbedtls_pk_context *' but argument is of type 'mbedtls_rsa_context *'
 1001 | int mbedtls_pk_write_pubkey_pem(const mbedtls_pk_context *ctx, unsigned char *buf, size_t size);
      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/crypto_wrapper/crypto_wrapper.c:51:40: warning: passing argument 1 of 'mbedtls_pk_write_key_pem' from incompatible pointer type [-Wincompatible-pointer-types]
   51 |     else ret= mbedtls_pk_write_key_pem(&pk, buffer, 16000-1);
      |                                        ^~~
      |                                        |
      |                                        mbedtls_rsa_context *
/home/fracchio/esp/esp-idf/components/mbedtls/mbedtls/include/mbedtls/pk.h:1013:56: note: expected 'const mbedtls_pk_context *' but argument is of type 'mbedtls_rsa_context *'
 1013 | int mbedtls_pk_write_key_pem(const mbedtls_pk_context *ctx, unsigned char *buf, size_t size);
      |                              ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/crypto_wrapper/crypto_wrapper.c: In function 'print_certificates':
/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/crypto_wrapper/crypto_wrapper.c:380:25: warning: unused variable 'pk' [-Wunused-variable]
  380 |     mbedtls_pk_context* pk= get_pub_key_from_cert(curr->certificate);
      |                         ^~
/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/crypto_wrapper/crypto_wrapper.c:375:23: warning: unused variable 'certificate' [-Wunused-variable]
  375 |     mbedtls_x509_crt *certificate = &(curr->certificate);  // Assuming curr is a pointer to a structure containing the certificate
      |                       ^~~~~~~~~~~
In file included from /home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/crypto_wrapper/crypto_wrapper.h:7:
/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/mqtt_wrapper/include/mqtt_wrapper.h: At top level:
/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/mqtt_wrapper/include/mqtt_wrapper.h:187:13: warning: 'disconnect_mqtt_client' defined but not used [-Wunused-function]
  187 | static void disconnect_mqtt_client(esp_mqtt_client_handle_t client){
      |             ^~~~~~~~~~~~~~~~~~~~~~
/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/mqtt_wrapper/include/mqtt_wrapper.h:148:33: warning: 'mqtt_app_start' defined but not used [-Wunused-function]
  148 | static esp_mqtt_client_handle_t mqtt_app_start(char* broker_url, QueueHandle_t queue, char* mess){
      |                                 ^~~~~~~~~~~~~~
/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/mqtt_wrapper/include/mqtt_wrapper.h:60:12: warning: 'mqtt_get_my_messages' defined but not used [-Wunused-function]
   60 | static int mqtt_get_my_messages(esp_mqtt_client_handle_t client, char* topic){
      |            ^~~~~~~~~~~~~~~~~~~~
/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/components/mqtt_wrapper/include/mqtt_wrapper.h:48:12: warning: 'mqtt_publish_message' defined but not used [-Wunused-function]
   48 | static int mqtt_publish_message(esp_mqtt_client_handle_t client, char* message, char* topic, int qos){
      |            ^~~~~~~~~~~~~~~~~~~~
[5/10] Linking C static library esp-idf/crypto_wrapper/libcrypto_wrapper.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable secure_com_node.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/build/secure_com_node.bin
[9/10] cd /home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/build/esp-idf/esptool_py && /home/fracchio/.espressif/python_env/idf5.2_py3.11_env/bin/python /home/fracchio/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/build/partition_table/partition-table.bin /home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/build/secure_com_node.bin
secure_com_node.bin binary size 0xe2390 bytes. Smallest app partition is 0x100000 bytes. 0x1dc70 bytes (12%) free.
[9/10] cd /home/fracchio/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/fracchio/esp/esp-idf -D "SERIAL_TOOL=/home/fracchio/.espressif/python_env/idf5.2_py3.11_env/bin/python;;/home/fracchio/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/fracchio/Scrivania/iot_network_and_protocols_project/secure_com_node/build -P /home/fracchio/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
